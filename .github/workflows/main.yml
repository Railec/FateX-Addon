name: Release Creation

env:
  project_url: "https://github.com/${{github.repository}}"
  manifest_url: https://github.com/${{github.repository}}/releases/latest/download/module.json
  module_url: https://github.com/${{github.repository}}/releases/download/${{github.event.release.tag_name}}/module.zip

on: 
  release:
    types: [published]

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      node-version: "16.x"

    steps:
    - uses: actions/checkout@v3

    - name: Use Node.js ${{ node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ node-version }}

    # get part of the tag after the `v`
    - name: Extract tag version number
      id: get_version
      shell: bash
      run: echo "::set-output name=version::$(node ./github/workflows/get-version.js ${{ github.ref }})"

    # Substitute the Manifest and Download URLs in the module.json
    - name: Substitute Manifest and Download Links For Versioned Ones
      id: sub_manifest_link_version
      uses: cschleiden/replace-tokens@v1
      with:
        files: 'module.json'
      env:
        VERSION: ${{ steps.get-version.outputs.version }}
        URL: ${{ env.project_url }}
        MANIFEST: ${{ env.manifest_url }}
        DOWNLOAD: ${{ env.module_url }}

    # Create a zip file with all files required by the module to add to the release
    - name: Build
      run: |
        npm install
        npx gulp zip

    # Create a release for this specific version
    - name: Update Release with Files
      id: create_version_release
      uses: ncipollo/release-action@v1
      with:
        allowUpdates: true # Set this to false if you want to prevent updating existing releases
        name: ${{ github.event.release.name }}
        draft: ${{ github.event.release.unpublished }}
        prerelease: ${{ github.event.release.prerelease }}
        token: ${{ secrets.GITHUB_TOKEN }}
        artifacts: './bundle/module.json, ./bundle/module.zip'
        tag: ${{ github.event.release.tag_name }}
        body: ${{ github.event.release.body }}